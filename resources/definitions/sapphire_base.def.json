{
    "name": "TwoTrees Sapphire Base Printer",
    "version": 2,
    "inherits": "fdmprinter",
    "metadata": {
        "visible": false,
        "author": "john@saunders.id.au",
        "manufacturer": "TwoTrees",
        "file_formats": "text/x-gcode",
        "first_start_actions": ["MachineSettingsAction"],

        "machine_extruder_trains": {
            "0": "sapphire_base_extruder_0"
        },

        "has_materials": true,
        "has_variants": true,
        "has_machine_quality": true,
        "variants_name": "Nozzle Size",

        "preferred_variant_name": "0.4mm Nozzle",
        "preferred_quality_type": "normal",
        "preferred_material": "generic_pla"
    },
    "overrides": {
        "machine_name": { "default_value": "Sapphire Base Printer" },
        "machine_start_gcode": { "default_value": "; Sapphire Start G-code\nG92 E0 ; Reset Extruder\nG28 ; Home all axes\nG1 Z5.0 F3000 ; Move Z Axis up little to prevent scratching Heat Bed\n" },
        "machine_end_gcode": { "default_value": "G91 ;Relative positioning\nG1 E-4.5 F2700 ;Retract a bit\nG1 E-2 Z0.2 F2400 ;Retract and raise Z\nG1 X5 Y5 F3000 ;Wipe out\nG1 Z10 ;Raise Z more\nG90 ;Absolute positionning\n\nG1 X0 Y{machine_depth} ;Present print\nM106 S0 ;Turn-off fan\nM104 S0 ;Turn-off hotend\nM140 S0 ;Turn-off bed\n\nM84 X Y E ;Disable all steppers but Z\n" },

        "material_diameter": { "default_value": 1.75 },
        "machine_heated_bed": { "default_value": true },

        "machine_max_feedrate_x": { "value": 200 },
        "machine_max_feedrate_y": { "value": 200 },
        "machine_max_feedrate_z": { "value": 10 },
        "machine_max_feedrate_e": { "value": 70 },

        "machine_max_acceleration_x": { "value": 1000 },
        "machine_max_acceleration_y": { "value": 1000 },
        "machine_max_acceleration_z": { "value": 100 },
        "machine_max_acceleration_e": { "value": 800 },
        "machine_acceleration": { "value": 1000 },

        "machine_max_jerk_xy": { "value": 20 },
        "machine_max_jerk_z": { "value": 0.4 },
        "machine_max_jerk_e": { "value": 5 },

        "line_width": { "value": "machine_nozzle_size" },

        "acceleration_print": { "value": "machine_acceleration" },
        "acceleration_travel": { "value": "machine_acceleration" },

        "speed_print": { "value": 100.0 } ,
        "speed_travel": { "value": "speed_print if magic_spiralize else 150" },
        "speed_layer_0": { "value": 30.0 },
        "speed_z_hop": { "value": 5 },

        "optimize_wall_printing_order": { "value": "True" },

        "material_initial_print_temperature": { "value": "material_print_temperature" },
        "material_final_print_temperature": { "value": "material_print_temperature" },

        "material_flow": { "value": 100 },
        "travel_compensate_overlapping_walls_0_enabled": { "value": "False" },

        "z_seam_type": { "value": "'back'" },
        "z_seam_corner": { "value": "'z_seam_corner_weighted'" },
        
        "infill_sparse_density": { "value": "20" },
        "infill_pattern": { "value": "'lines' if infill_sparse_density > 50 else 'cubic'" },
        "infill_before_walls": { "value": false },
        "infill_overlap": { "value": "30 if infill_sparse_density < 95 and infill_pattern != 'concentric' else 0" },
        "skin_overlap": { "value": "10 if top_bottom_pattern != 'concentric' else 0" },
        "infill_wipe_dist": { "value": 0.0 },
        "wall_0_wipe_dist": { "value": 0.0 },

        "fill_perimeter_gaps": { "value": "'everywhere'" },
        "filter_out_tiny_gaps": { "value": false },
        "fill_outline_gaps": { "value": false },

        "retraction_speed": {
            "maximum_value_warning": "machine_max_feedrate_e",
            "default_value": 45
        },
        "retraction_retract_speed": {
            "maximum_value_warning": "machine_max_feedrate_e"
        },
        "retraction_prime_speed": {
            "maximum_value_warning": "machine_max_feedrate_e"
        },
        
        "retraction_hop": { "value": 0.2 },
        "retraction_combing": { "value": "'off' if retraction_hop_enabled else 'noskin'" },
        "retraction_combing_max_distance": { "value": 30 },
        "travel_avoid_supports": { "value": true },
        "travel_retract_before_outer_wall": { "value": true },
        
        "retraction_min_travel": { "value": 1.5 },
        "retraction_count_max": { "value": 100 },
        "retraction_extrusion_window": { "value": 10 },

        "cool_fan_full_at_height": { "value": "layer_height_0 + 2 * layer_height" },
        "cool_min_layer_time": { "value": 10 },

        "adhesion_type": { "value": "'skirt'" },
        "brim_replaces_support": { "value": false },
        "skirt_gap": { "value": 3.0 },
        "skirt_line_count": { "value": 5 },

        "adaptive_layer_height_variation": { "value": 0.08 },
        "adaptive_layer_height_variation_step": { "value": 0.04 },

        "meshfix_maximum_resolution": { "value": "0.05" },
        "meshfix_maximum_travel_resolution": { "value": "meshfix_maximum_resolution" },

        "support_angle": { "value": "math.floor(math.degrees(math.atan(line_width/2.0/layer_height)))" },
        "support_infill_rate": { "value": "0 if support_enable and support_structure == 'tree' else 20" },
        "support_use_towers": { "value": false },
        "support_xy_distance": { "value": "wall_line_width_0 * 2" },
        "support_xy_distance_overhang": { "value": "wall_line_width_0" },
        "support_z_distance": { "value": "layer_height if layer_height >= 0.16 else 0.16" },
        "support_brim_enable": { "value": true },
        "support_brim_width": { "value": 4 },

        "support_interface_enable": { "value": true },
        "support_interface_height": { "value": "layer_height * 3" },
        "support_interface_density": { "value": 33.333 },
        "support_interface_pattern": { "value": "'grid'" },
        "support_interface_skip_height": { "value": 0.2 },
        "minimum_support_area": { "value": 2 },
        "minimum_interface_area": { "value": 10 },
        "top_bottom_thickness": {"value":  "layer_height_0 + layer_height * 3" },
        "top_thickness": {"value":  "layer_height * 4" },
        "wall_thickness": {"value": "line_width * 2" }
    }
}